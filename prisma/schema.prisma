// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define your database models below
model Order {
  id              String           @id @default(uuid())
  userId          String? // References user ID from Auth service
  name            String
  email           String
  phone           String
  totalAmount     Float
  discount        Float            @default(0) //Value of discount (if any)
  currency        String
  status          OrderStatus      @default(PENDING)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  orderItems      OrderItem[]
  paymentId       String // References payment from Payment service
  shippingAddress ShippingAddress?
}

model OrderItem {
  id          String @id @default(uuid())
  orderId     String
  productId   String
  productName String
  productSKU  String
  quantity    Int
  price       Float // unit price
  total       Float // (price * quantity) + tax
  tax         Float  @default(0) // VALUE OF TAX (not rate)
  order       Order  @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([orderId, productId])
}

model ShippingAddress {
  id           String  @id @default(uuid())
  orderId      String  @unique
  order        Order   @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade) // this helps to update shipping address of order everytime order is updated. We can update shiping address via order updated
  buildingName String?
  landmark     String?
  roomNo       String?
  floor        String?
  address      String
  city         String
  state        String
  country      String
  zipCode      String?
}

enum OrderStatus {
  PENDING
  PACKAGING //Product is being packaged
  CANCELLED
  OUT_FOR_DELIVERY
  DELIVERED
}
